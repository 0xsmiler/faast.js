# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
    build:
        docker:
            - image: circleci/node:10
        working_directory: ~/repo
        steps:
            - checkout
            - restore_cache:
                  keys:
                      - v1-dependencies-{{ checksum "package.json" }}
                      # fallback to using the latest cache if no exact match is found
                      - v1-dependencies-

            - run: npm install
            - save_cache:
                  paths:
                      - node_modules
                  key: v1-dependencies-{{ checksum "package.json" }}
            - run: npm run build
            - save_cache:
                  key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
                  paths:
                      - ~/repo

    test-local:
        docker:
            - image: circleci/node:10
        working_directory: ~/repo
        steps:
            - restore_cache:
                  keys:
                      - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
            - run: npx nyc --reporter=lcov npm run test-local
            - run: npm run codecov

    test-aws:
        docker:
            - image: circleci/node:10
        working_directory: ~/repo
        steps:
            - restore_cache:
                  keys:
                      - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
            - run: npx nyc --reporter=lcov npm run test-aws-remote
            - run: npm run codecov

    test-google:
        docker:
            - image: circleci/node:10
        working_directory: ~/repo
        steps:
            - restore_cache:
                  keys:
                      - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
            - run: npm run set-gcp-key
            - run: npx nyc --reporter=lcov npm run test-google-remote
            - run: npm run codecov

workflows:
    version: 2
    build_and_test:
        jobs:
            - build
            - test-local:
                  requires:
                      - build
            - test-aws:
                  requires:
                      - test-local
            - test-google:
                  requires:
                      - test-aws
